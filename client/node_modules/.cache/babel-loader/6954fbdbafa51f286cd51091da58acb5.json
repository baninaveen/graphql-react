{"ast":null,"code":"import _classCallCheck from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\src\\\\components\\\\AddBook.jsx\";\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { getAuthorsQuery, addBookMutation, getBooksQuery } from '../queries/queries';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook(props) {\n    var _this;\n\n    _classCallCheck(this, AddBook);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddBook).call(this, props));\n    _this.state = {\n      name: '',\n      genre: '',\n      authorid: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddBook, [{\n    key: \"displayAuthors\",\n    value: function displayAuthors() {\n      var data = this.props.getAuthorsQuery;\n      if (data.loading) return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Loading Authors....\");\n      return data.authors.map(function (author) {\n        return React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }, {\n    key: \"submitForm\",\n    value: function submitForm(e) {\n      e.preventDefault();\n      this.props.addBookMutation({\n        variables: {\n          name: this.state.name,\n          genre: this.state.genre,\n          authorid: this.state.authorid\n        },\n        refetchQueris: [{\n          query: getBooksQuery\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        id: \"add-book\",\n        onSubmit: this.submitForm.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Book Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Genre:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            genre: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Author:\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.setState({\n            authorid: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Select Author\"), this.displayAuthors())), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default compose(graphql(getAuthorsQuery, {\n  name: 'getAuthorsQuery'\n}), graphql(addBookMutation, {\n  name: 'addBookMutation'\n}))(AddBook);","map":{"version":3,"sources":["G:\\PRACTICE_CODING\\Youtube\\GraphQL-fullstack\\client\\src\\components\\AddBook.jsx"],"names":["React","Component","graphql","compose","getAuthorsQuery","addBookMutation","getBooksQuery","AddBook","props","state","name","genre","authorid","data","loading","authors","map","author","id","e","preventDefault","variables","refetchQueris","query","submitForm","bind","setState","target","value","displayAuthors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql, compose } from 'react-apollo';\r\nimport {\r\n  getAuthorsQuery,\r\n  addBookMutation,\r\n  getBooksQuery\r\n} from '../queries/queries';\r\n\r\nclass AddBook extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      genre: '',\r\n      authorid: ''\r\n    };\r\n  }\r\n  displayAuthors() {\r\n    var data = this.props.getAuthorsQuery;\r\n    if (data.loading) return <option>Loading Authors....</option>;\r\n    return data.authors.map(author => {\r\n      return (\r\n        <option key={author.id} value={author.id}>\r\n          {author.name}\r\n        </option>\r\n      );\r\n    });\r\n  }\r\n\r\n  submitForm(e) {\r\n    e.preventDefault();\r\n    this.props.addBookMutation({\r\n      variables: {\r\n        name: this.state.name,\r\n        genre: this.state.genre,\r\n        authorid: this.state.authorid\r\n      },\r\n      refetchQueris: [{ query: getBooksQuery }]\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form id=\"add-book\" onSubmit={this.submitForm.bind(this)}>\r\n        <div className=\"field\">\r\n          <label>Book Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ name: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Genre:</label>\r\n          <input\r\n            type=\"text\"\r\n            onChange={e => this.setState({ genre: e.target.value })}\r\n          />\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Author:</label>\r\n          <select onChange={e => this.setState({ authorid: e.target.value })}>\r\n            <option>Select Author</option>\r\n            {this.displayAuthors()}\r\n          </select>\r\n        </div>\r\n        <button>+</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(getAuthorsQuery, { name: 'getAuthorsQuery' }),\r\n  graphql(addBookMutation, { name: 'addBookMutation' })\r\n)(AddBook);\r\n"]},"metadata":{},"sourceType":"module"}