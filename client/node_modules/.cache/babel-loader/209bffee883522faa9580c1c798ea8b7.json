{"ast":null,"code":"import _taggedTemplateLiteral from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation {\\n    addBook(name: \\\"\\\", genre: \\\"\\\", authorid: \\\"\\\") {\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    authors {\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    books {\\n      name\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nvar getBooksQuery = gql(_templateObject());\nvar getAuthorsQuery = gql(_templateObject2());\nvar addBookMutation = gql(_templateObject3());\nexport { getAuthorsQuery, getBooksQuery };","map":{"version":3,"sources":["G:\\PRACTICE_CODING\\Youtube\\GraphQL-fullstack\\client\\src\\queries\\queries.js"],"names":["gql","getBooksQuery","getAuthorsQuery","addBookMutation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,IAAMC,aAAa,GAAGD,GAAH,mBAAnB;AASA,IAAME,eAAe,GAAGF,GAAH,oBAArB;AASA,IAAMG,eAAe,GAAGH,GAAH,oBAArB;AASA,SAASE,eAAT,EAA0BD,aAA1B","sourcesContent":["import { gql } from 'apollo-boost';\r\n\r\nconst getBooksQuery = gql`\r\n  {\r\n    books {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst getAuthorsQuery = gql`\r\n  {\r\n    authors {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst addBookMutation = gql`\r\n  mutation {\r\n    addBook(name: \"\", genre: \"\", authorid: \"\") {\r\n      name\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport { getAuthorsQuery, getBooksQuery };\r\n"]},"metadata":{},"sourceType":"module"}