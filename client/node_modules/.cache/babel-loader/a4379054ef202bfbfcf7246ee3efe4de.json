{"ast":null,"code":"import _classCallCheck from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\PRACTICE_CODING\\\\Youtube\\\\GraphQL-fullstack\\\\client\\\\src\\\\components\\\\AddBook.jsx\";\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\n\nvar AddBook =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddBook, _Component);\n\n  function AddBook() {\n    _classCallCheck(this, AddBook);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddBook).apply(this, arguments));\n  }\n\n  _createClass(AddBook, [{\n    key: \"displayAuthors\",\n    value: function displayAuthors() {\n      var data = this.props.data;\n      if (data.loading) return React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, \"Loading Authors....\");\n      return data.authors.map(function (author) {\n        return React.createElement(\"option\", {\n          key: author.id,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        id: \"add-book\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"Book Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Genre:\"), React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"Author:\"), React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Select Author\"), this.displayAuthors())), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"+\"));\n    }\n  }]);\n\n  return AddBook;\n}(Component);\n\nexport default graphql(getAuthorsQuery)(AddBook);","map":{"version":3,"sources":["G:\\PRACTICE_CODING\\Youtube\\GraphQL-fullstack\\client\\src\\components\\AddBook.jsx"],"names":["React","Component","gql","graphql","AddBook","data","props","loading","authors","map","author","id","name","displayAuthors","getAuthorsQuery"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;;IAEMC,O;;;;;;;;;;;;;qCACa;AACf,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;AACA,UAAIA,IAAI,CAACE,OAAT,EAAkB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AAClB,aAAOF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,MAAM,EAAI;AAChC,eACE;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACC,EAApB;AAAwB,UAAA,KAAK,EAAED,MAAM,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,MAAM,CAACE,IADV,CADF;AAKD,OANM,CAAP;AAOD;;;6BACQ;AACP,aACE;AAAM,QAAA,EAAE,EAAC,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEG,KAAKC,cAAL,EAFH,CAFF,CATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBF,CADF;AAoBD;;;;EAjCmBZ,S;;AAoCtB,eAAeE,OAAO,CAACW,eAAD,CAAP,CAAyBV,OAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { gql } from 'apollo-boost';\r\nimport { graphql } from 'react-apollo';\r\n\r\nclass AddBook extends Component {\r\n  displayAuthors() {\r\n    var data = this.props.data;\r\n    if (data.loading) return <option>Loading Authors....</option>;\r\n    return data.authors.map(author => {\r\n      return (\r\n        <option key={author.id} value={author.id}>\r\n          {author.name}\r\n        </option>\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <form id=\"add-book\">\r\n        <div className=\"field\">\r\n          <label>Book Name:</label>\r\n          <input type=\"text\" />\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Genre:</label>\r\n          <input type=\"text\" />\r\n        </div>\r\n        <div className=\"field\">\r\n          <label>Author:</label>\r\n          <select>\r\n            <option>Select Author</option>\r\n            {this.displayAuthors()}\r\n          </select>\r\n        </div>\r\n        <button>+</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default graphql(getAuthorsQuery)(AddBook);\r\n"]},"metadata":{},"sourceType":"module"}